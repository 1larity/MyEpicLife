package com.digitale.screens;import com.badlogic.gdx.Gdx;import com.badlogic.gdx.graphics.Color;import com.badlogic.gdx.graphics.Texture.TextureFilter;import com.badlogic.gdx.graphics.g2d.BitmapFont;import com.badlogic.gdx.graphics.g2d.TextureAtlas;import com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator;import com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator.FreeTypeFontParameter;import com.badlogic.gdx.scenes.scene2d.ui.Skin;import com.digitale.myepiclife.MyEpicLife;public class SkinManager {	protected static String selectedSkin = "MelTek";	private static String TAG="SKINMANAGER: ";	/** set up default system skin **/	public static void skinSetup() {		if (MyEpicLife.DEBUG)			System.out					.println(TAG+"loading skin "+selectedSkin);		MyEpicLife.uiSkin=new Skin();		// have to hard load skin assets without using asset manager, as we need these		// assets before		// the asset manager has finished loading		// set up body text font		FreeTypeFontParameter bodyParameter = new FreeTypeFontParameter();		bodyParameter.size = (int) (Gdx.graphics.getHeight() / 22);		bodyParameter.shadowOffsetX = Gdx.graphics.getHeight() / 200;		bodyParameter.shadowOffsetY = Gdx.graphics.getHeight() / 200;		bodyParameter.shadowColor = new Color(0, 0, 0, .75f);		/** Minification filter **/		bodyParameter.minFilter = TextureFilter.Linear;		/** Magnification filter **/		bodyParameter.magFilter = TextureFilter.Linear;		FreeTypeFontGenerator bodyGenerator = new FreeTypeFontGenerator(				Gdx.files.internal("data/ui/arial.ttf"));		MyEpicLife.globalFont = bodyGenerator.generateFont(bodyParameter);		//set up the micro font		FreeTypeFontParameter microParameter = new FreeTypeFontParameter();		microParameter.size = (int) (Gdx.graphics.getWidth() / 50);				microParameter.shadowOffsetX = Gdx.graphics.getHeight() / 200;		microParameter.shadowOffsetY = Gdx.graphics.getHeight() / 200;		microParameter.shadowColor = new Color(0, 0, 0, .75f);		/** Minification filter **/		microParameter.minFilter = TextureFilter.Linear;		/** Magnification filter **/		microParameter.magFilter = TextureFilter.Linear;		FreeTypeFontGenerator microGenerator = new FreeTypeFontGenerator(				Gdx.files.internal("data/ui/small.ttf"));		MyEpicLife.microFont = microGenerator.generateFont(microParameter);		// set up title font		FreeTypeFontParameter titleParameter = new FreeTypeFontParameter();		titleParameter.size = 40;// (int) (Gdx.graphics.getHeight()/15);		titleParameter.shadowOffsetX = Gdx.graphics.getHeight() / 200;		titleParameter.shadowOffsetY = Gdx.graphics.getHeight() / 200;		titleParameter.shadowColor = new Color(0, 0, 0, .75f);		titleParameter.kerning = true;		/** Minification filter */		titleParameter.minFilter = TextureFilter.Linear;		/** Magnification filter */		titleParameter.magFilter = TextureFilter.Linear;		FreeTypeFontGenerator titleGenerator = new FreeTypeFontGenerator(				Gdx.files.internal("data/ui/audiowide.ttf"));		MyEpicLife.titleFont = titleGenerator.generateFont(titleParameter);		TextureAtlas skinAtlas = new TextureAtlas(Gdx.files.internal("data/ui/uiskinhifi.atlas"));		if (selectedSkin.equals("Holo")) {			skinAtlas = new TextureAtlas(Gdx.files.internal("data/ui/uiskinholo.atlas"));		} else if (selectedSkin.equals("LibGDX")) {			skinAtlas = new TextureAtlas(Gdx.files.internal("data/ui/uiskin.atlas"));		} else if (selectedSkin.equals("MelTek")) {			skinAtlas = new TextureAtlas(Gdx.files.internal("data/ui/uiskinhifi.atlas"));		}		// add default font to skin		MyEpicLife.uiSkin.add("default-font", bodyGenerator.generateFont(bodyParameter),				BitmapFont.class);		// add micro font 		MyEpicLife.uiSkin.add("micro-font", microGenerator.generateFont(microParameter),				BitmapFont.class);		// add title font		MyEpicLife.uiSkin.add("title-font", titleGenerator.generateFont(titleParameter),				BitmapFont.class);		MyEpicLife.uiSkin.addRegions(skinAtlas);		MyEpicLife.uiSkin.load(Gdx.files.internal("data/ui/uiskinhifi.json"));	}}